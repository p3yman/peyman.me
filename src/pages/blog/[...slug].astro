---
import { type CollectionEntry, getCollection, render } from "astro:content";
import BlogLayout from "../../layouts/Blog.astro";
import "remark-github-blockquote-alert/alert.css";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => {
    const id = post.id.split("/").pop();
    return {
      params: { id, slug: id },
      props: post,
    };
  });
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const postID = post.data.id;
const { Content } = await render(post);
---

<style is:global>
  @reference '../../styles/global.css';

  .prose p {
    @apply text-lg;
  }
  .prose :is(h1, h2, h3, h4, h5, h6) {
    @apply text-black font-serif font-black leading-relaxed;
  }
  .prose h1 {
    @apply mb-4 mt-14;
  }
</style>
<BlogLayout {...post.data} body={post.body}>
  <div class="prose max-w-none">
    <Content />
  </div>

  <div class="mt-12 border-t border-t-gray-lighter pt-12">
    <script
      src="https://giscus.app/client.js"
      data-repo="p3yman/peyman.me"
      data-repo-id="R_kgDOKFTTaQ"
      data-category="Blog"
      data-category-id="DIC_kwDOKFTTac4CZZlm"
      data-mapping="specific-term"
      data-term={postID}
      data-strict="0"
      data-reactions-enabled="1"
      data-emit-metadata="0"
      data-input-position="bottom"
      data-theme="light"
      data-lang="en"
      crossorigin="anonymous"
      async></script>
  </div>
</BlogLayout>
